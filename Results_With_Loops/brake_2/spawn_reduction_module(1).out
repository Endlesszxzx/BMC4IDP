CBMC version 5.62.0 (ec1d828-dirty) 64-bit x86_64 linux
Parsing brake_2.c
Converting
Type-checking brake_2
Generating GOTO Program
Adding CPROVER library (x86_64)
Removal of function pointers and virtual functions
Generic Property Instrumentation
Running with 8 object bits, 56 offset bits (default)
Starting Bounded Model Checking
Runtime Symex: 0.0946714s
Adding constraints
using sc expand memory model
ssa num:757
start to make constraint
263
success make constraint
--------------------log constraint nums:------------------
fr : 34
fr-begin : 5
fr-end : 5
nested-isr : 75
po : 244
rf : 73
rf-begin : 73
rf-end : 73
rf-order : 73
rf-some : 85
rfi : 35
spawn-before-fr-false : 16
spawn-before-ws : 11
thread-spawn : 125
ws-begin : 11
ws-end : 11
constraints sum : 949
spawn_relaxing_cons_nums: 432
size of program expression: 1706 steps
no slicing due to threads
Generated 1 VCC(s), 1 remaining after simplification
Runtime Postprocess Equation: 0.0411848s
Passing problem to propositional reduction
converting SSA
Runtime Convert SSA: 1.70151s
Running propositional reduction
Post-processing
Runtime Post-process: 0.00114586s
Solving with MiniSAT 2.2.1 with simplifier
237619 variables, 1101234 clauses
decisions: 197874
propagations: 69876873
conflicts: 59679
SAT checker: instance is SATISFIABLE
Runtime Solver: 47.3473s
Runtime decision procedure: 49.0491s
Building error trace

** Results:
brake_2.c function task_compute
[task_compute.assertion.1] line 259 assertion fabs(vkmh-tmp)<=0.001: FAILURE

Trace for task_compute.assertion.1:

State 16 file brake_2.c function __CPROVER_initialize line 190 thread 0
----------------------------------------------------
  __CPROVER_thread_priorities[0l]=5 (00000000 00000000 00000000 00000101)

State 17 file brake_2.c function __CPROVER_initialize line 190 thread 0
----------------------------------------------------
  __CPROVER_thread_priorities[1l]=5 (00000000 00000000 00000000 00000101)

State 18 file brake_2.c function __CPROVER_initialize line 190 thread 0
----------------------------------------------------
  __CPROVER_thread_priorities[2l]=5 (00000000 00000000 00000000 00000101)

State 19 file brake_2.c function __CPROVER_initialize line 190 thread 0
----------------------------------------------------
  __CPROVER_thread_priorities[3l]=5 (00000000 00000000 00000000 00000101)

State 20 file brake_2.c function __CPROVER_initialize line 190 thread 0
----------------------------------------------------
  __CPROVER_thread_priorities[4l]=22 (00000000 00000000 00000000 00010110)

State 22 file brake_2.c function __CPROVER_initialize line 191 thread 0
----------------------------------------------------
  __CPROVER_threads[0l]="c::task_RR_Wheel" (00000010 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 23 file brake_2.c function __CPROVER_initialize line 191 thread 0
----------------------------------------------------
  __CPROVER_threads[1l]="c::task_FR_Wheel" (00000011 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 24 file brake_2.c function __CPROVER_initialize line 191 thread 0
----------------------------------------------------
  __CPROVER_threads[2l]="c::task_FL_Wheel" (00000100 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 25 file brake_2.c function __CPROVER_initialize line 191 thread 0
----------------------------------------------------
  __CPROVER_threads[3l]="c::task_RL_Wheel" (00000101 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 26 file brake_2.c function __CPROVER_initialize line 191 thread 0
----------------------------------------------------
  __CPROVER_threads[4l]="c::task_compute" (00000110 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 40 file brake_acc_nodiv_ctrl_data.c function __CPROVER_initialize line 24 thread 0
----------------------------------------------------
  brake_acc_nodiv_ctrl_P.Distribution_Gain[0l]=0.31 (00111111 11010011 11010111 00001010 00111101 01110000 10100011 11010111)

State 41 file brake_acc_nodiv_ctrl_data.c function __CPROVER_initialize line 24 thread 0
----------------------------------------------------
  brake_acc_nodiv_ctrl_P.Distribution_Gain[1l]=0.29 (00111111 11010010 10001111 01011100 00101000 11110101 11000010 10001111)

State 42 file brake_acc_nodiv_ctrl_data.c function __CPROVER_initialize line 24 thread 0
----------------------------------------------------
  brake_acc_nodiv_ctrl_P.Distribution_Gain[2l]=0.21 (00111111 11001010 11100001 01000111 10101110 00010100 01111010 11100001)

State 43 file brake_acc_nodiv_ctrl_data.c function __CPROVER_initialize line 24 thread 0
----------------------------------------------------
  brake_acc_nodiv_ctrl_P.Distribution_Gain[3l]=0.19 (00111111 11001000 01010001 11101011 10000101 00011110 10111000 01010010)

Assumption:
  argc' >= 0

State 103 function __CPROVER__start thread 0
----------------------------------------------------
  INPUT argc: 1610612736 (01100000 00000000 00000000 00000000)

State 107 file brake_2.c function __CPROVER__start line 555 thread 0
----------------------------------------------------
  argc=1610612736 (01100000 00000000 00000000 00000000)

State 108 file brake_2.c function __CPROVER__start line 555 thread 0
----------------------------------------------------
  argv=argv' (00000111 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 115 file brake_acc_nodiv_ctrl.c function brake_acc_nodiv_ctrl_initialize line 479 thread 0
----------------------------------------------------
  realSize=sizeof(real_T) /*8ul*/  (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00001000)

State 119 file rtGetNaN.c function rtGetNaN line 32 thread 0
----------------------------------------------------
  bitsPerReal=64ul (00000000 00000000 00000000 00000000 00000000 00000000 00000000 01000000)

State 121 file rtGetNaN.c function rtGetNaN line 33 thread 0
----------------------------------------------------
  nan=0.0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 124 file rtGetNaN.c function rtGetNaN line 41 thread 0
----------------------------------------------------
  one=1 (00000000 00000001)

State 126 file rtGetNaN.c function rtGetNaN line 45 thread 0
----------------------------------------------------
  machByteOrder=/*enum*/LittleEndian (00000000 00000000 00000000 00000000)

State 129 file rtGetNaN.c function rtGetNaN line 52 thread 0
----------------------------------------------------
  tmpVal={ .bitVal={ .words={ .wordL=0u, .wordH=0u } } } ({ { 00000000 00000000 00000000 00000000, 00000000 00000000 00000000 00000000 } })

State 130 file rtGetNaN.c function rtGetNaN line 54 thread 0
----------------------------------------------------
  byte_extract_little_endian(tmpVal, 4l, unsigned int)=4294443008u (11111111 11111000 00000000 00000000)

State 131 file rtGetNaN.c function rtGetNaN line 55 thread 0
----------------------------------------------------
  byte_extract_little_endian(tmpVal, 0l, unsigned int)=0u (00000000 00000000 00000000 00000000)

State 132 file rtGetNaN.c function rtGetNaN line 56 thread 0
----------------------------------------------------
  nan=-NAN (11111111 11111000 00000000 00000000 00000000 00000000 00000000 00000000)

State 136 file rt_nonfinite.c function rt_InitInfAndNaN line 44 thread 0
----------------------------------------------------
  rtNaN=-NAN (11111111 11111000 00000000 00000000 00000000 00000000 00000000 00000000)

State 140 file rtGetNaN.c function rtGetNaNF line 86 thread 0
----------------------------------------------------
  nanF.wordL={ .wordLreal=0.0f } (00000000 00000000 00000000 00000000)

State 142 file rtGetNaN.c function rtGetNaNF line 88 thread 0
----------------------------------------------------
  one=1 (00000000 00000001)

State 144 file rtGetNaN.c function rtGetNaNF line 92 thread 0
----------------------------------------------------
  machByteOrder=/*enum*/LittleEndian (00000000 00000000 00000000 00000000)

State 147 file rtGetNaN.c function rtGetNaNF line 96 thread 0
----------------------------------------------------
  byte_extract_little_endian(nanF.wordL, 0l, unsigned int)=4290772992u (11111111 11000000 00000000 00000000)

State 151 file rt_nonfinite.c function rt_InitInfAndNaN line 45 thread 0
----------------------------------------------------
  rtNaNF=-NAN (11111111 11000000 00000000 00000000)

State 155 file rtGetInf.c function rtGetInf line 32 thread 0
----------------------------------------------------
  bitsPerReal=64ul (00000000 00000000 00000000 00000000 00000000 00000000 00000000 01000000)

State 157 file rtGetInf.c function rtGetInf line 33 thread 0
----------------------------------------------------
  inf=0.0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 160 file rtGetInf.c function rtGetInf line 41 thread 0
----------------------------------------------------
  one=1 (00000000 00000001)

State 162 file rtGetInf.c function rtGetInf line 45 thread 0
----------------------------------------------------
  machByteOrder=/*enum*/LittleEndian (00000000 00000000 00000000 00000000)

State 165 file rtGetInf.c function rtGetInf line 52 thread 0
----------------------------------------------------
  tmpVal={ .bitVal={ .words={ .wordL=0u, .wordH=0u } } } ({ { 00000000 00000000 00000000 00000000, 00000000 00000000 00000000 00000000 } })

State 166 file rtGetInf.c function rtGetInf line 54 thread 0
----------------------------------------------------
  byte_extract_little_endian(tmpVal, 4l, unsigned int)=2146435072u (01111111 11110000 00000000 00000000)

State 167 file rtGetInf.c function rtGetInf line 55 thread 0
----------------------------------------------------
  byte_extract_little_endian(tmpVal, 0l, unsigned int)=0u (00000000 00000000 00000000 00000000)

State 168 file rtGetInf.c function rtGetInf line 56 thread 0
----------------------------------------------------
  inf=+INFINITY (01111111 11110000 00000000 00000000 00000000 00000000 00000000 00000000)

State 172 file rt_nonfinite.c function rt_InitInfAndNaN line 46 thread 0
----------------------------------------------------
  rtInf=+INFINITY (01111111 11110000 00000000 00000000 00000000 00000000 00000000 00000000)

State 175 file rtGetInf.c function rtGetInfF line 86 thread 0
----------------------------------------------------
  infF={ .wordL={ .wordLreal=0.0f } } ({ 00000000 00000000 00000000 00000000 })

State 176 file rtGetInf.c function rtGetInfF line 87 thread 0
----------------------------------------------------
  byte_extract_little_endian(infF.wordL, 0l, unsigned int)=2139095040u (01111111 10000000 00000000 00000000)

State 179 file rt_nonfinite.c function rt_InitInfAndNaN line 47 thread 0
----------------------------------------------------
  rtInfF=+INFINITY (01111111 10000000 00000000 00000000)

State 183 file rtGetInf.c function rtGetMinusInf line 97 thread 0
----------------------------------------------------
  bitsPerReal=64ul (00000000 00000000 00000000 00000000 00000000 00000000 00000000 01000000)

State 185 file rtGetInf.c function rtGetMinusInf line 98 thread 0
----------------------------------------------------
  minf=0.0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 188 file rtGetInf.c function rtGetMinusInf line 106 thread 0
----------------------------------------------------
  one=1 (00000000 00000001)

State 190 file rtGetInf.c function rtGetMinusInf line 110 thread 0
----------------------------------------------------
  machByteOrder=/*enum*/LittleEndian (00000000 00000000 00000000 00000000)

State 193 file rtGetInf.c function rtGetMinusInf line 117 thread 0
----------------------------------------------------
  tmpVal={ .bitVal={ .words={ .wordL=0u, .wordH=0u } } } ({ { 00000000 00000000 00000000 00000000, 00000000 00000000 00000000 00000000 } })

State 194 file rtGetInf.c function rtGetMinusInf line 119 thread 0
----------------------------------------------------
  byte_extract_little_endian(tmpVal, 4l, unsigned int)=4293918720u (11111111 11110000 00000000 00000000)

State 195 file rtGetInf.c function rtGetMinusInf line 120 thread 0
----------------------------------------------------
  byte_extract_little_endian(tmpVal, 0l, unsigned int)=0u (00000000 00000000 00000000 00000000)

State 196 file rtGetInf.c function rtGetMinusInf line 121 thread 0
----------------------------------------------------
  minf=-INFINITY (11111111 11110000 00000000 00000000 00000000 00000000 00000000 00000000)

State 200 file rt_nonfinite.c function rt_InitInfAndNaN line 48 thread 0
----------------------------------------------------
  rtMinusInf=-INFINITY (11111111 11110000 00000000 00000000 00000000 00000000 00000000 00000000)

State 203 file rtGetInf.c function rtGetMinusInfF line 151 thread 0
----------------------------------------------------
  minfF={ .wordL={ .wordLreal=0.0f } } ({ 00000000 00000000 00000000 00000000 })

State 204 file rtGetInf.c function rtGetMinusInfF line 152 thread 0
----------------------------------------------------
  byte_extract_little_endian(minfF.wordL, 0l, unsigned int)=4286578688u (11111111 10000000 00000000 00000000)

State 207 file rt_nonfinite.c function rt_InitInfAndNaN line 49 thread 0
----------------------------------------------------
  rtMinusInfF=-INFINITY (11111111 10000000 00000000 00000000)

State 209 file brake_acc_nodiv_ctrl.c function brake_acc_nodiv_ctrl_initialize line 483 thread 0
----------------------------------------------------
  brake_acc_nodiv_ctrl_P.ABS_FL_Wheel.positive_UpperSat=+INFINITY (01111111 11110000 00000000 00000000 00000000 00000000 00000000 00000000)

State 210 file brake_acc_nodiv_ctrl.c function brake_acc_nodiv_ctrl_initialize line 484 thread 0
----------------------------------------------------
  brake_acc_nodiv_ctrl_P.ABS_FR_Wheel.positive_UpperSat=+INFINITY (01111111 11110000 00000000 00000000 00000000 00000000 00000000 00000000)

State 211 file brake_acc_nodiv_ctrl.c function brake_acc_nodiv_ctrl_initialize line 485 thread 0
----------------------------------------------------
  brake_acc_nodiv_ctrl_P.ABS_RL_Wheel.positive_UpperSat=+INFINITY (01111111 11110000 00000000 00000000 00000000 00000000 00000000 00000000)

State 212 file brake_acc_nodiv_ctrl.c function brake_acc_nodiv_ctrl_initialize line 486 thread 0
----------------------------------------------------
  brake_acc_nodiv_ctrl_P.ABS_RR_Wheel.positive_UpperSat=+INFINITY (01111111 11110000 00000000 00000000 00000000 00000000 00000000 00000000)

State 213 file brake_acc_nodiv_ctrl.c function brake_acc_nodiv_ctrl_initialize line 532 thread 0
----------------------------------------------------
  RT_Buffer0=0.0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 214 file brake_acc_nodiv_ctrl.c function brake_acc_nodiv_ctrl_initialize line 535 thread 0
----------------------------------------------------
  RT4_Buffer0=0.0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 215 file brake_acc_nodiv_ctrl.c function brake_acc_nodiv_ctrl_initialize line 538 thread 0
----------------------------------------------------
  RT1_Buffer0=0.0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 216 file brake_acc_nodiv_ctrl.c function brake_acc_nodiv_ctrl_initialize line 541 thread 0
----------------------------------------------------
  RT2_Buffer0=0.0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 217 file brake_acc_nodiv_ctrl.c function brake_acc_nodiv_ctrl_initialize line 544 thread 0
----------------------------------------------------
  RT3_Buffer0=0.0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 222 file brake_2.c function main line 564 thread 0
----------------------------------------------------
  _inputs=&brake_acc_nodiv_ctrl_U (00001000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 223 file brake_2.c function havocInputs line 172 thread 0
----------------------------------------------------
  inputs={ .In_BrakePedal=0.0, .In_RRRotation=+NAN, .In_RLRotation=0.0,
    .In_FRRotation=0.0, .In_FLRotation=0.0 } ({ 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000, 01111111 11110000 00000000 10010100 00000000 00000000 00000000 00000000, 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000, 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000, 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 })

State 224 file brake_2.c function havocInputs line 182 thread 0
----------------------------------------------------
  brake_acc_nodiv_ctrl_U.In_BrakePedal=0.0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 225 file brake_2.c function havocInputs line 182 thread 0
----------------------------------------------------
  brake_acc_nodiv_ctrl_U.In_RRRotation=+NAN (01111111 11110000 00000000 10010100 00000000 00000000 00000000 00000000)

State 226 file brake_2.c function havocInputs line 182 thread 0
----------------------------------------------------
  brake_acc_nodiv_ctrl_U.In_RLRotation=0.0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 227 file brake_2.c function havocInputs line 182 thread 0
----------------------------------------------------
  brake_acc_nodiv_ctrl_U.In_FRRotation=0.0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 228 file brake_2.c function havocInputs line 182 thread 0
----------------------------------------------------
  brake_acc_nodiv_ctrl_U.In_FLRotation=0.0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 248 file brake_2.c function main line 589 thread 0
----------------------------------------------------
  result=0 (00000000 00000000 00000000 00000000)

State 252 file brake_2.c function __CPROVER__start line 555 thread 0
----------------------------------------------------
  OUTPUT return': 0 (00000000 00000000 00000000 00000000)

State 264 file brake_2.c function task_RR_Wheel line 294 thread 1
----------------------------------------------------
  brake_acc_nodiv_ctrl_B_local={ .RT_h=0.0, .RT4=0.0, .RT1=0.0, .RT2=0.0, .RT3=0.0,
    .RT14=0.0, .RT9=0.0, .RT10=0.0, .RT11=0.0,
    .RT12=0.0, .vkmh=0.0, .Distribution={ 0.0, 0.0, 0.0, 0.0 }, .Gain1=0.0,
    .ABS_FL_Wheel={ .Threshold_10kmh=0.0 }, .ABS_FR_Wheel={ .Threshold_10kmh=0.0 },
    .ABS_RL_Wheel={ .Threshold_10kmh=0.0 },
    .ABS_RR_Wheel={ .Threshold_10kmh=0.0 } } ({ 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000, 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000, 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000, 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000, 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000, 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000, 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000, 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000, 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000, 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000, 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000, { 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000, 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000, 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000, 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 }, 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000, { 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 }, { 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 }, { 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 }, { 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 } })

State 265 file brake_2.c function task_RR_Wheel line 297 thread 1
----------------------------------------------------
  brake_acc_nodiv_ctrl_B_local.RT_h=0.0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 266 file brake_2.c function task_RR_Wheel line 300 thread 1
----------------------------------------------------
  brake_acc_nodiv_ctrl_B_local.RT4=0.0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 267 file brake_2.c function task_RR_Wheel line 303 thread 1
----------------------------------------------------
  brake_acc_nodiv_ctrl_B_local.RT1=0.0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 268 file brake_2.c function task_RR_Wheel line 306 thread 1
----------------------------------------------------
  brake_acc_nodiv_ctrl_B_local.RT2=0.0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 269 file brake_2.c function task_RR_Wheel line 309 thread 1
----------------------------------------------------
  brake_acc_nodiv_ctrl_B_local.RT3=0.0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 270 file brake_2.c function task_RR_Wheel line 317 thread 1
----------------------------------------------------
  rtb_to_int=0.0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 271 file brake_2.c function task_RR_Wheel line 320 thread 1
----------------------------------------------------
  brake_acc_nodiv_ctrl_B_local.RT_h=0.0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 272 file brake_2.c function task_RR_Wheel line 323 thread 1
----------------------------------------------------
  brake_acc_nodiv_ctrl_B_local.RT4=0.0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 275 file brake_2.c function task_RR_Wheel line 328 thread 1
----------------------------------------------------
  u=+NAN (01111111 11110000 00000000 10010100 00000000 00000000 00000000 00000000)

State 276 file brake_acc_nodiv_ctrl.c function rt_roundd_snf line 195 thread 1
----------------------------------------------------
  y=0.0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 280 file brake_acc_nodiv_ctrl.c function rt_roundd_snf line 196 thread 1
----------------------------------------------------
  d=+NAN (01111111 11110000 00000000 10010100 00000000 00000000 00000000 00000000)

State 285 file brake_acc_nodiv_ctrl.c function rt_roundd_snf line 205 thread 1
----------------------------------------------------
  y=+NAN (01111111 11110000 00000000 10010100 00000000 00000000 00000000 00000000)

State 288 file brake_2.c function task_RR_Wheel line 328 thread 1
----------------------------------------------------
  rtb_to_int=+NAN (01111111 11110000 00000000 10010100 00000000 00000000 00000000 00000000)

State 291 file brake_2.c function task_RR_Wheel line 333 thread 1
----------------------------------------------------
  rtu_vVehicleVelocitykmh=0.0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 292 file brake_2.c function task_RR_Wheel line 333 thread 1
----------------------------------------------------
  rtu_TRequestedTorqueNm=0.0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 293 file brake_2.c function task_RR_Wheel line 333 thread 1
----------------------------------------------------
  rtu_wwheelRotationrpm=+NAN (01111111 11110000 00000000 10010100 00000000 00000000 00000000 00000000)

State 294 file brake_2.c function task_RR_Wheel line 333 thread 1
----------------------------------------------------
  localB=&brake_acc_nodiv_ctrl_B_local!1@1.ABS_RR_Wheel (00001001 00000000 00000000 00000000 00000000 00000000 00000000 10011000)

State 295 file brake_2.c function task_RR_Wheel line 333 thread 1
----------------------------------------------------
  localP.wheSpdms_Gain=0.05236 (00111111 10101010 11001110 11101001 11110011 01111011 11101011 11010101)

State 296 file brake_2.c function task_RR_Wheel line 333 thread 1
----------------------------------------------------
  localP.vms_Gain=0.277778 (00111111 11010001 11000111 00011100 01110001 11000111 00011100 01110010)

State 297 file brake_2.c function task_RR_Wheel line 333 thread 1
----------------------------------------------------
  localP.positive_UpperSat=+INFINITY (01111111 11110000 00000000 00000000 00000000 00000000 00000000 00000000)

State 298 file brake_2.c function task_RR_Wheel line 333 thread 1
----------------------------------------------------
  localP.positive_LowerSat=0.0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 299 file brake_2.c function task_RR_Wheel line 333 thread 1
----------------------------------------------------
  localP.times_10_Gain=10.0 (01000000 00100100 00000000 00000000 00000000 00000000 00000000 00000000)

State 300 file brake_2.c function task_RR_Wheel line 333 thread 1
----------------------------------------------------
  localP.slip_abs_on_times_10_Gain=1.0 (00111111 11110000 00000000 00000000 00000000 00000000 00000000 00000000)

State 301 file brake_2.c function task_RR_Wheel line 333 thread 1
----------------------------------------------------
  localP.Threshold_10kmh_Threshold=10.0 (01000000 00100100 00000000 00000000 00000000 00000000 00000000 00000000)

State 302 file brake_2.c function task_RR_Wheel line 333 thread 1
----------------------------------------------------
  localP.ReleaseBrake_Value=0 (00000000)

State 303 file brake_2.c function task_RR_Wheel line 333 thread 1
----------------------------------------------------
  localP.$pad8=0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 304 file brake_acc_nodiv_ctrl.c function brake_acc_nodiv_ct_ABS_RR_Wheel line 76 thread 1
----------------------------------------------------
  rtb_RelationalOperator=0 (00000000)

State 305 file brake_acc_nodiv_ctrl.c function brake_acc_nodiv_ct_ABS_RR_Wheel line 77 thread 1
----------------------------------------------------
  rtb_vms=0.0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 306 file brake_acc_nodiv_ctrl.c function brake_acc_nodiv_ct_ABS_RR_Wheel line 78 thread 1
----------------------------------------------------
  u=0.0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 307 file brake_acc_nodiv_ctrl.c function brake_acc_nodiv_ct_ABS_RR_Wheel line 82 thread 1
----------------------------------------------------
  rtb_vms=0.0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 308 file brake_acc_nodiv_ctrl.c function brake_acc_nodiv_ct_ABS_RR_Wheel line 87 thread 1
----------------------------------------------------
  u=+NAN (01111111 11110000 00000000 00000000 00000000 00000000 00000000 00000001)

State 311 file brake_acc_nodiv_ctrl.c function brake_acc_nodiv_ct_ABS_RR_Wheel line 103 thread 1
----------------------------------------------------
  rtb_RelationalOperator=0 (00000000)

State 313 file brake_acc_nodiv_ctrl.c function brake_acc_nodiv_ct_ABS_RR_Wheel line 122 thread 1
----------------------------------------------------
  brake_acc_nodiv_ctrl_B_local.ABS_RR_Wheel.Threshold_10kmh=0.0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 315 file brake_2.c function task_RR_Wheel line 343 thread 1
----------------------------------------------------
  brake_acc_nodiv_ctrl_B_local.RT1=0.0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 316 file brake_2.c function task_RR_Wheel line 352 thread 1
----------------------------------------------------
  RT9=+NAN (01111111 11110000 00000000 10010100 00000000 00000000 00000000 00000000)

State 321 file brake_2.c function task_compute line 202 thread 2
----------------------------------------------------
  brake_acc_nodiv_ctrl_B_local={ .RT_h=0.0, .RT4=0.0, .RT1=0.0, .RT2=0.0, .RT3=0.0,
    .RT14=0.0, .RT9=0.0, .RT10=0.0, .RT11=0.0,
    .RT12=0.0, .vkmh=0.0, .Distribution={ 0.0, 0.0, 0.0, 0.0 }, .Gain1=0.0,
    .ABS_FL_Wheel={ .Threshold_10kmh=0.0 }, .ABS_FR_Wheel={ .Threshold_10kmh=0.0 },
    .ABS_RL_Wheel={ .Threshold_10kmh=0.0 },
    .ABS_RR_Wheel={ .Threshold_10kmh=0.0 } } ({ 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000, 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000, 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000, 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000, 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000, 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000, 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000, 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000, 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000, 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000, 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000, { 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000, 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000, 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000, 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 }, 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000, { 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 }, { 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 }, { 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 }, { 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 } })

State 322 file brake_2.c function task_compute line 205 thread 2
----------------------------------------------------
  brake_acc_nodiv_ctrl_B_local.RT_h=0.0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 323 file brake_2.c function task_compute line 208 thread 2
----------------------------------------------------
  brake_acc_nodiv_ctrl_B_local.RT4=0.0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 324 file brake_2.c function task_compute line 211 thread 2
----------------------------------------------------
  brake_acc_nodiv_ctrl_B_local.RT1=0.0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 325 file brake_2.c function task_compute line 214 thread 2
----------------------------------------------------
  brake_acc_nodiv_ctrl_B_local.RT2=0.0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 326 file brake_2.c function task_compute line 217 thread 2
----------------------------------------------------
  brake_acc_nodiv_ctrl_B_local.RT3=0.0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 327 file brake_2.c function task_compute line 224 thread 2
----------------------------------------------------
  vkmh=0.0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 328 file brake_2.c function task_compute line 225 thread 2
----------------------------------------------------
  Distribution_idx=0.0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 329 file brake_2.c function task_compute line 226 thread 2
----------------------------------------------------
  Distribution_idx_0=0.0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 330 file brake_2.c function task_compute line 227 thread 2
----------------------------------------------------
  Distribution_idx_1=0.0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 331 file brake_2.c function task_compute line 233 thread 2
----------------------------------------------------
  Distribution_idx=0.0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 332 file brake_2.c function task_compute line 235 thread 2
----------------------------------------------------
  Distribution_idx_0=0.0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 333 file brake_2.c function task_compute line 237 thread 2
----------------------------------------------------
  Distribution_idx_1=0.0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 334 file brake_2.c function task_compute line 249 thread 2
----------------------------------------------------
  vkmh=+NAN (01111111 11110000 00000000 00000000 00000000 00000000 00000000 00000001)

State 336 file brake_2.c function task_compute line 257 thread 2
----------------------------------------------------
  tmp=+NAN (01111111 11110000 00000000 00000000 00000000 00000000 00000000 00000001)

State 340 file brake_2.c function task_compute line 259 thread 2
----------------------------------------------------
  d=+NAN (01111111 11110000 00000000 00000000 00000000 00000000 00000000 00000001)

Violated property:
  file brake_2.c function task_compute line 259 thread 2
  assertion fabs(vkmh-tmp)<=0.001
  return_value_fabs <= 0.001



** 1 of 1 failed (2 iterations)
VERIFICATION FAILED
